jira.Automation JqlAutomation5_AlonCompanyProject {
  name = "JqlAutomation5"
  state = "ENABLED"
  description = "asd"
  authorAccountId = {
    id = "616e3f77e79ff6006f1eca7f"
    displayName = "Shir Reifenberg"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    schemaVersion = 1
    type = "jira.jql.scheduled"
    value = {
      schedule = {
        cronExpression = ""
        method = "BASIC"
        rate = 0
        rateInterval = 86400
        rRule = '''
BEGIN:VEVENT
DTSTART;TZID=Asia/Jerusalem:20220821T093110
RRULE:FREQ=MONTHLY;INTERVAL=1;BYHOUR=9;BYMINUTE=0;BYSECOND=0;BYDAY=-1TH
END:VEVENT

'''
      }
      jql = "${ jira.Field.instance.Status__status } != ${ jira.Status.instance.closed.name } AND updatedDate < startofweek(-4)"
      executionMode = "jql"
      onlyUpdatedIssues = true
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "ACTION"
      schemaVersion = 10
      type = "jira.issue.transition"
      value = {
        operations = [
          {
            field = {
              type = "ID"
              value = jira.Field.instance.Summary__string
            }
            fieldType = "summary"
            type = "SET"
            rawValue = "test jql"
          },
          {
            field = {
              type = "ID"
              value = jira.Field.instance.CustomCheckboxes__multicheckboxes__c
            }
            fieldType = "com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes"
            type = "SET"
            value = [
              {
                type = "NAME"
                value = "opt2"
              },
            ]
          },
        ]
        sendNotifications = true
        destinationStatus = {
          type = "ID"
          value = jira.Status.instance.done
        }
        transitionMatch = ""
      }
      children = [
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.AlonCompanyProject
    },
  ]
  labels = [
  ]
  tags = [
    {
      tagType = "IS_RULE_UPDATED"
      tagValue = "true"
    },
  ]
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
}
