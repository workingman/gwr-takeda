jira.Workflow TEST__Incident_Management_workflow_for_Jira_Service_Management@fsssssss {
  description = "This Jira Service Management Incident Management workflow was generated for Project TEST"
  transitions = [
    {
      name = "Back to work in progress"
      description = ""
      from = [
        jira.Status.instance.completed,
      ]
      to = jira.Status.instance.work_in_progress@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___19@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
          {
            type = "UpdateIssueFieldFunction"
            configuration = {
              fieldId = jira.Field.instance.Resolution__resolution
              fieldValue = ""
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.back.to.work.in.progress"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "sd.resolution.clear"
          value = ""
        },
      ]
    },
    {
      name = "Cancel"
      description = ""
      from = [
        jira.Status.instance.open,
        jira.Status.instance.pending,
        jira.Status.instance.work_in_progress@s,
      ]
      to = jira.Status.instance.canceled
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Resolve_Issue_Screen___18@ssssssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.submit"
          value = "sd.workflow.save"
        },
        {
          key = "jira.i18n.title"
          value = "sd.workflow.cancel"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Close"
      description = ""
      from = [
        jira.Status.instance.canceled,
        jira.Status.instance.completed,
      ]
      to = jira.Status.instance.closed
      type = "directed"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.close"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Create"
      description = ""
      to = jira.Status.instance.open
      type = "initial"
      rules = {
        validators = [
          {
            type = "PermissionValidator"
            configuration = {
              permissionKey = "CREATE_ISSUES"
            }
          },
        ]
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Issue_Created@s
              }
            }
          },
          {
            type = "UpdateIssueStatusFunction"
          },
        ]
      }
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Investigate"
      description = ""
      from = [
        jira.Status.instance.open,
        jira.Status.instance.pending,
      ]
      to = jira.Status.instance.work_in_progress@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___19@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.investigate"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Pending"
      description = ""
      from = [
        jira.Status.instance.open,
        jira.Status.instance.work_in_progress@s,
      ]
      to = jira.Status.instance.pending
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Pending_Reason_screen___18@ssssssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.pending"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Resolve"
      description = ""
      from = [
        jira.Status.instance.open,
        jira.Status.instance.work_in_progress@s,
      ]
      to = jira.Status.instance.completed
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Resolve_Issue_Screen___18@ssssssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.resolve"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
  ]
  statuses = [
    {
      id = jira.Status.instance.canceled
      name = "Canceled"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.closed
      name = "Closed"
      properties = [
        {
          key = "jira.issue.editable"
          value = "false"
        },
      ]
    },
    {
      id = jira.Status.instance.completed
      name = "Completed"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.open
      name = "Open"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.pending
      name = "Pending"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.work_in_progress@s
      name = "Work in progress"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
  ]
  name = "TEST: Incident Management workflow for Jira Service Management"
}
