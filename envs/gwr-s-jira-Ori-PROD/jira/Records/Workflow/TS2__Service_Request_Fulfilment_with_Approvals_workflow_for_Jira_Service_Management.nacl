jira.Workflow TS2__Service_Request_Fulfilment_with_Approvals_workflow_for_Jira_Service_Management@fssssssssss {
  description = "This Jira Service Management Service Request Fulfilment with Approvals workflow was generated for Project TS2"
  transitions = [
    {
      name = "Approved"
      description = ""
      from = [
        jira.Status.instance.waiting_for_approval@s,
      ]
      to = jira.Status.instance.waiting_for_support@s
      type = "directed"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
        conditions = {
          type = "BlockInProgressApprovalCondition"
        }
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.approved"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Back to in progress"
      description = ""
      from = [
        jira.Status.instance.resolved,
      ]
      to = jira.Status.instance.in_progress@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___26@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
          {
            type = "UpdateIssueFieldFunction"
            configuration = {
              fieldId = jira.Field.instance.Resolution__resolution
              fieldValue = ""
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.back.to.in.progress"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "sd.resolution.clear"
          value = ""
        },
      ]
    },
    {
      name = "Cancel request"
      description = ""
      from = [
        jira.Status.instance.in_progress@s,
        jira.Status.instance.pending,
        jira.Status.instance.waiting_for_approval@s,
        jira.Status.instance.waiting_for_customer@s,
        jira.Status.instance.waiting_for_support@s,
      ]
      to = jira.Status.instance.canceled
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Resolve_Issue_Screen___25@ssssssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.cancel.request"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "servicedesk.customer.transition.active"
          value = "true"
        },
        {
          key = "servicedesk.customer.transition.resolution"
          value = "10001"
        },
      ]
    },
    {
      name = "Close"
      description = ""
      from = [
        jira.Status.instance.canceled,
        jira.Status.instance.resolved,
      ]
      to = jira.Status.instance.closed
      type = "directed"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.close"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Create issue"
      description = ""
      to = jira.Status.instance.waiting_for_approval@s
      type = "initial"
      rules = {
        validators = [
          {
            type = "PermissionValidator"
            configuration = {
              permissionKey = "CREATE_ISSUES"
            }
          },
        ]
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Issue_Created@s
              }
            }
          },
          {
            type = "UpdateIssueStatusFunction"
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "common.forms.create"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "opsbar-sequence"
          value = "0"
        },
      ]
    },
    {
      name = "Declined"
      description = ""
      from = [
        jira.Status.instance.waiting_for_approval@s,
      ]
      to = jira.Status.instance.resolved
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Resolve_Issue_Screen___25@ssssssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
          {
            type = "UpdateIssueFieldFunction"
            configuration = {
              fieldId = jira.Field.instance.Resolution__resolution
              fieldValue = jira.Resolution.instance.Declined
            }
          },
        ]
        conditions = {
          type = "BlockInProgressApprovalCondition"
        }
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.declined"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Escalate"
      description = ""
      from = [
        jira.Status.instance.waiting_for_support@s,
      ]
      to = jira.Status.instance.escalated
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___26@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.escalate"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "servicedesk.customer.transition.active"
          value = "true"
        },
        {
          key = "servicedesk.customer.transition.resolution"
          value = ""
        },
      ]
    },
    {
      name = "Escalate this issue"
      description = ""
      from = [
        jira.Status.instance.waiting_for_customer@s,
      ]
      to = jira.Status.instance.escalated
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___26@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.escalate.this.issue"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "In progress"
      description = ""
      from = [
        jira.Status.instance.escalated,
        jira.Status.instance.pending,
        jira.Status.instance.waiting_for_support@s,
      ]
      to = jira.Status.instance.in_progress@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___26@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.in.progress"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "opsbar-sequence"
          value = "10"
        },
      ]
    },
    {
      name = "Pending"
      description = ""
      from = [
        jira.Status.instance.in_progress@s,
        jira.Status.instance.waiting_for_support@s,
      ]
      to = jira.Status.instance.pending
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Pending_Reason_screen___25@ssssssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.title"
          value = "sd.workflow.pending"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      name = "Resolve this issue"
      description = ""
      from = [
        jira.Status.instance.in_progress@s,
        jira.Status.instance.pending,
        jira.Status.instance.waiting_for_customer@s,
        jira.Status.instance.waiting_for_support@s,
      ]
      to = jira.Status.instance.resolved
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Resolve_Issue_Screen___25@ssssssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.submit"
          value = "sd.workflow.itsupport.v2.transition.resolve.this.issue.submit"
        },
        {
          key = "jira.i18n.title"
          value = "sd.workflow.itsupport.v2.transition.resolve.this.issue.title"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "sd.tour.resolve.step"
          value = "true"
        },
      ]
    },
    {
      name = "Respond to customer"
      description = ""
      from = [
        jira.Status.instance.pending,
        jira.Status.instance.waiting_for_support@s,
      ]
      to = jira.Status.instance.waiting_for_customer@s
      type = "directed"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.submit"
          value = "sd.workflow.itsupport.v2.transition.respond.to.customer.submit"
        },
        {
          key = "jira.i18n.title"
          value = "sd.workflow.itsupport.v2.transition.respond.to.customer.title"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "opsbar-sequence"
          value = "5"
        },
      ]
    },
    {
      name = "Respond to support"
      description = ""
      from = [
        jira.Status.instance.waiting_for_customer@s,
      ]
      to = jira.Status.instance.waiting_for_support@s
      type = "directed"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
      properties = [
        {
          key = "jira.i18n.submit"
          value = "sd.workflow.itsupport.v2.transition.respond.to.support.submit"
        },
        {
          key = "jira.i18n.title"
          value = "sd.workflow.itsupport.v2.transition.respond.to.support.title"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
  ]
  statuses = [
    {
      id = jira.Status.instance.canceled
      name = "Canceled"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.closed
      name = "Closed"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.escalated
      name = "Escalated"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.in_progress@s
      name = "In progress"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.pending
      name = "Pending"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.resolved
      name = "Resolved"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.waiting_for_approval@s
      name = "Waiting for approval"
      properties = [
        {
          key = "approval.active"
          value = "true"
        },
        {
          key = "approval.condition.type"
          value = "number"
        },
        {
          key = "approval.condition.value"
          value = "1"
        },
        {
          key = "approval.field.id"
          value = "customfield_10003"
        },
        {
          key = "approval.transition.approved"
          value = "901"
        },
        {
          key = "approval.transition.rejected"
          value = "911"
        },
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.waiting_for_customer@s
      name = "Waiting for customer"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "sd.step.key"
          value = "sdWFCustomer"
        },
      ]
    },
    {
      id = jira.Status.instance.waiting_for_support@s
      name = "Waiting for support"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "sd.step.key"
          value = "sdWFSupport"
        },
      ]
    },
  ]
  name = "TS2: Service Request Fulfilment with Approvals workflow for Jira Service Management"
}
